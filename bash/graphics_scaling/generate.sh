#!/bin/bash

# Generates sprite sheets for each atlas

# depends on .atl file(s), compress.tmp file, and mkatlas.pl script 
# (which requires etc1tool and texturetool for compression)

set -u #referencing undefined variable causes error
set -x #print out everything it does
set -e #anything with non-zero exit status aborts script

usage()
{
  echo "USAGE: <compression (pvr, etc1 or none)> <image-src-dir> <atlas-dest-dir>"
}

if [ $# != 3 ]; then
  usage
  exit 1
fi

compression="${1}"
#source dir must contain a compress.tmp metadata file
srcDir="${2}"
destDir="${3}"

etc1FileEnding='.pkm'
pvrFileEnding='.pvr'
atlasFileEnding='.atl'
compressFileEnding=0Q


# if 'none' is specified as the compression param, 
# no extension is specified and the default output from script mkatlas.pl is .png 
# otherwise...
if [ ${compression} == 'etc1' ]; then
  compressFileEnding=${etc1FileEnding}
elif [ ${compression} == 'pvr' ]; then
  compressFileEnding=${pvrFileEnding}
fi

# compress.tmp file generated by resize_assets.sh script indicates which atlases need compression
# each line in compress.tmp is formatted as follows:
# <atlasname>:compression=<(yes or no)>
cat "${srcDir}/compress.tmp" | while read atlasLine; do
  
  atlasName=$(echo ${atlasLine} | cut -s -d: -f1)
  atlasCompress=$(echo ${atlasLine} | cut -s -d: -f2 | cut -s -d= -f2)
  
  # mkatlas params: -f configfile [-s size (128)] [-r imgrootdir (.)] [-p pvrspacing (0)] (cont'd)
  # [-e output compressFileEnding (.png)] [-g group name (1)]

  if [[ ${atlasCompress} = 'yes' && ${compression} != 'none' ]]; then
    perl ./mkatlas.pl -r "${srcDir}" -f "${srcDir}/${atlasName}${atlasFileEnding}" -s 1024 -p 4 -g "${atlasName}" -e "${compressFileEnding}" || { echo "FAILED!"; exit 1; }
    mv -f "${srcDir}/${atlasName}"*".atlas" "${srcDir}/${atlasName}"*"Atlas${compressFileEnding}" "${destDir}"
  elif [[ ${atlasCompress} = 'no' || ${compression} = 'none' ]]; then
    perl ./mkatlas.pl -r "${srcDir}" -f "${srcDir}/${atlasName}${atlasFileEnding}" -s 1024 -p 2 -g "${atlasName}" || { echo "FAILED!"; exit 1; }
    mv -f "${srcDir}/${atlasName}"*".atlas" "${srcDir}/${atlasName}"*"Atlas.png" "${destDir}"
  else
    echo "Error: compression flag error in compress.tmp on line ${atlasLine}"
  fi


done
